openapi: 3.0.3
info:
  title: Car Store
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1
paths:
  /client:
    get:
      summary: Get clients
      tags:
        - Client
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientDto'
        '500':
          description: Internal Server Error
    post:
      summary: Create client
      tags:
        - Client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDto'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    delete:
      summary: Delete client by id
      tags:
        - Client
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    put:
      summary: Update client
      tags:
        - Client
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error

  /order:
    get:
      summary: Get orders
      tags:
        - Order
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        '500':
          description: Internal Server Error
    post:
      summary: Create order
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    delete:
      summary: Delete order by id
      tags:
        - Order
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    put:
      summary: Update order
      tags:
        - Order
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error

  /car:
    get:
      summary: Get cars
      tags:
        - Car
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarDto'
        '500':
          description: Internal Server Error
    post:
      summary: Create car
      tags:
        - Car
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarDto'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    delete:
      summary: Delete car by id
      tags:
        - Car
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error
    put:
      summary: Update car
      tags:
        - Car
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDto'
        '400':
          description: Bad request - problems with validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
        '500':
          description: Internal Server Error


components:
  schemas:
    ClientDto:
      type: object
      required:
        - fullName
        - dateBirthday
        - gender
      properties:
        id:
          type: integer
          format: int64
        fullName:
          type: string
        dateBirthday:
          type: string
          format: 01.01.2023
        gender:
          type: integer
          format: int32
    OrderDto:
      type: object
      required:
        - clientId
        - carId
        - orderDate
      properties:
        id:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        carId:
          type: integer
          format: int64
        clientDto:
          type: object
        carDto:
          type: object
        orderDate:
          type: string
          format: 01.01.2023
    CarDto:
      type: object
      required:
        - model
        - color
        - engineCapacity
        - releaseDate
        - price
      properties:
        id:
          type: integer
          format: int64
        model:
          type: string
        color:
          type: string
        engineCapacity:
          type: number
        releaseDate:
          type: string
          format: 01.01.2023
        price:
          type: number
    ErrorResponseDto:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
